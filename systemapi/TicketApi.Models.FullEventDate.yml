### YamlMime:ManagedReference
items:
- uid: TicketApi.Models.FullEventDate
  commentId: T:TicketApi.Models.FullEventDate
  id: FullEventDate
  parent: TicketApi.Models
  children:
  - TicketApi.Models.FullEventDate.Equals(System.Object)
  - TicketApi.Models.FullEventDate.Equals(TicketApi.Models.FullEventDate)
  - TicketApi.Models.FullEventDate.EventDate
  - TicketApi.Models.FullEventDate.EventHtmlDescription
  - TicketApi.Models.FullEventDate.EventId
  - TicketApi.Models.FullEventDate.EventName
  - TicketApi.Models.FullEventDate.GetHashCode
  - TicketApi.Models.FullEventDate.Id
  - TicketApi.Models.FullEventDate.NoAvailableSeats
  - TicketApi.Models.FullEventDate.op_Equality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  - TicketApi.Models.FullEventDate.op_Inequality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  - TicketApi.Models.FullEventDate.ToJson
  - TicketApi.Models.FullEventDate.ToString
  - TicketApi.Models.FullEventDate.VenueCity
  - TicketApi.Models.FullEventDate.VenueCountry
  - TicketApi.Models.FullEventDate.VenueId
  - TicketApi.Models.FullEventDate.VenueName
  langs:
  - csharp
  - vb
  name: FullEventDate
  nameWithType: FullEventDate
  fullName: TicketApi.Models.FullEventDate
  type: Class
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: FullEventDate
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 38
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class FullEventDate : IEquatable<FullEventDate>
    content.vb: >-
      <DataContract>

      Public Class FullEventDate
          Implements IEquatable(Of FullEventDate)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{TicketApi.Models.FullEventDate}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TicketApi.Models.FullEventDate.Id
  commentId: P:TicketApi.Models.FullEventDate.Id
  id: Id
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: FullEventDate.Id
  fullName: TicketApi.Models.FullEventDate.Id
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Id
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 44
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets Id\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "id")]

      public int ? Id { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember(Name:="id")>

      Public Property Id As Integer?
  overload: TicketApi.Models.FullEventDate.Id*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.EventId
  commentId: P:TicketApi.Models.FullEventDate.EventId
  id: EventId
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: EventId
  nameWithType: FullEventDate.EventId
  fullName: TicketApi.Models.FullEventDate.EventId
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: EventId
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 50
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets EventId\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "eventId")]

      public int ? EventId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember(Name:="eventId")>

      Public Property EventId As Integer?
  overload: TicketApi.Models.FullEventDate.EventId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: eventId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.EventName
  commentId: P:TicketApi.Models.FullEventDate.EventName
  id: EventName
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: EventName
  nameWithType: FullEventDate.EventName
  fullName: TicketApi.Models.FullEventDate.EventName
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: EventName
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 56
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets EventName\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "eventName")]

      public string EventName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="eventName")>

      Public Property EventName As String
  overload: TicketApi.Models.FullEventDate.EventName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: eventName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.EventHtmlDescription
  commentId: P:TicketApi.Models.FullEventDate.EventHtmlDescription
  id: EventHtmlDescription
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: EventHtmlDescription
  nameWithType: FullEventDate.EventHtmlDescription
  fullName: TicketApi.Models.FullEventDate.EventHtmlDescription
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: EventHtmlDescription
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 62
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets EventHtmlDescription\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "eventHtmlDescription")]

      public string EventHtmlDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="eventHtmlDescription")>

      Public Property EventHtmlDescription As String
  overload: TicketApi.Models.FullEventDate.EventHtmlDescription*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: eventHtmlDescription
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.EventDate
  commentId: P:TicketApi.Models.FullEventDate.EventDate
  id: EventDate
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: EventDate
  nameWithType: FullEventDate.EventDate
  fullName: TicketApi.Models.FullEventDate.EventDate
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: EventDate
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 68
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets EventDate\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "eventDate")]

      public DateTime? EventDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <DataMember(Name:="eventDate")>

      Public Property EventDate As Date?
  overload: TicketApi.Models.FullEventDate.EventDate*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: eventDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.VenueId
  commentId: P:TicketApi.Models.FullEventDate.VenueId
  id: VenueId
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: VenueId
  nameWithType: FullEventDate.VenueId
  fullName: TicketApi.Models.FullEventDate.VenueId
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: VenueId
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 74
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets VenueId\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "venueId")]

      public int ? VenueId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember(Name:="venueId")>

      Public Property VenueId As Integer?
  overload: TicketApi.Models.FullEventDate.VenueId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: venueId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.VenueName
  commentId: P:TicketApi.Models.FullEventDate.VenueName
  id: VenueName
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: VenueName
  nameWithType: FullEventDate.VenueName
  fullName: TicketApi.Models.FullEventDate.VenueName
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: VenueName
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 80
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets VenueName\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "venueName")]

      public string VenueName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="venueName")>

      Public Property VenueName As String
  overload: TicketApi.Models.FullEventDate.VenueName*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: venueName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.VenueCity
  commentId: P:TicketApi.Models.FullEventDate.VenueCity
  id: VenueCity
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: VenueCity
  nameWithType: FullEventDate.VenueCity
  fullName: TicketApi.Models.FullEventDate.VenueCity
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: VenueCity
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 86
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets VenueCity\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "venueCity")]

      public string VenueCity { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="venueCity")>

      Public Property VenueCity As String
  overload: TicketApi.Models.FullEventDate.VenueCity*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: venueCity
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.VenueCountry
  commentId: P:TicketApi.Models.FullEventDate.VenueCountry
  id: VenueCountry
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: VenueCountry
  nameWithType: FullEventDate.VenueCountry
  fullName: TicketApi.Models.FullEventDate.VenueCountry
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: VenueCountry
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 92
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets VenueCountry\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "venueCountry")]

      public string VenueCountry { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="venueCountry")>

      Public Property VenueCountry As String
  overload: TicketApi.Models.FullEventDate.VenueCountry*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: venueCountry
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.NoAvailableSeats
  commentId: P:TicketApi.Models.FullEventDate.NoAvailableSeats
  id: NoAvailableSeats
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: NoAvailableSeats
  nameWithType: FullEventDate.NoAvailableSeats
  fullName: TicketApi.Models.FullEventDate.NoAvailableSeats
  type: Property
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: NoAvailableSeats
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 98
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets or Sets NoAvailableSeats\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "noAvailableSeats")]

      public int ? NoAvailableSeats { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember(Name:="noAvailableSeats")>

      Public Property NoAvailableSeats As Integer?
  overload: TicketApi.Models.FullEventDate.NoAvailableSeats*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: noAvailableSeats
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.ToString
  commentId: M:TicketApi.Models.FullEventDate.ToString
  id: ToString
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: FullEventDate.ToString()
  fullName: TicketApi.Models.FullEventDate.ToString()
  type: Method
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: ToString
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 105
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nReturns the string presentation of the object\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: String presentation of the object
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: TicketApi.Models.FullEventDate.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TicketApi.Models.FullEventDate.ToJson
  commentId: M:TicketApi.Models.FullEventDate.ToJson
  id: ToJson
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: FullEventDate.ToJson()
  fullName: TicketApi.Models.FullEventDate.ToJson()
  type: Method
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: ToJson
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 127
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nReturns the JSON string presentation of the object\n"
  example: []
  syntax:
    content: public string ToJson()
    return:
      type: System.String
      description: JSON string presentation of the object
    content.vb: Public Function ToJson As String
  overload: TicketApi.Models.FullEventDate.ToJson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.Equals(System.Object)
  commentId: M:TicketApi.Models.FullEventDate.Equals(System.Object)
  id: Equals(System.Object)
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: FullEventDate.Equals(Object)
  fullName: TicketApi.Models.FullEventDate.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Equals
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 137
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nReturns true if objects are equal\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to be compared
    return:
      type: System.Boolean
      description: Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: TicketApi.Models.FullEventDate.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TicketApi.Models.FullEventDate.Equals(TicketApi.Models.FullEventDate)
  commentId: M:TicketApi.Models.FullEventDate.Equals(TicketApi.Models.FullEventDate)
  id: Equals(TicketApi.Models.FullEventDate)
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: Equals(FullEventDate)
  nameWithType: FullEventDate.Equals(FullEventDate)
  fullName: TicketApi.Models.FullEventDate.Equals(TicketApi.Models.FullEventDate)
  type: Method
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Equals
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 149
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nReturns true if FullEventDate instances are equal\n"
  example: []
  syntax:
    content: public bool Equals(FullEventDate other)
    parameters:
    - id: other
      type: TicketApi.Models.FullEventDate
      description: Instance of FullEventDate to be compared
    return:
      type: System.Boolean
      description: Boolean
    content.vb: Public Function Equals(other As FullEventDate) As Boolean
  overload: TicketApi.Models.FullEventDate.Equals*
  implements:
  - System.IEquatable{TicketApi.Models.FullEventDate}.Equals(TicketApi.Models.FullEventDate)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TicketApi.Models.FullEventDate.GetHashCode
  commentId: M:TicketApi.Models.FullEventDate.GetHashCode
  id: GetHashCode
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: FullEventDate.GetHashCode()
  fullName: TicketApi.Models.FullEventDate.GetHashCode()
  type: Method
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetHashCode
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 211
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash code
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: TicketApi.Models.FullEventDate.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: TicketApi.Models.FullEventDate.op_Equality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  commentId: M:TicketApi.Models.FullEventDate.op_Equality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  id: op_Equality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: Equality(FullEventDate, FullEventDate)
  nameWithType: FullEventDate.Equality(FullEventDate, FullEventDate)
  fullName: TicketApi.Models.FullEventDate.Equality(TicketApi.Models.FullEventDate, TicketApi.Models.FullEventDate)
  type: Operator
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: op_Equality
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 244
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  syntax:
    content: public static bool operator ==(FullEventDate left, FullEventDate right)
    parameters:
    - id: left
      type: TicketApi.Models.FullEventDate
    - id: right
      type: TicketApi.Models.FullEventDate
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As FullEventDate, right As FullEventDate) As Boolean
  overload: TicketApi.Models.FullEventDate.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TicketApi.Models.FullEventDate.op_Inequality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  commentId: M:TicketApi.Models.FullEventDate.op_Inequality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  id: op_Inequality(TicketApi.Models.FullEventDate,TicketApi.Models.FullEventDate)
  parent: TicketApi.Models.FullEventDate
  langs:
  - csharp
  - vb
  name: Inequality(FullEventDate, FullEventDate)
  nameWithType: FullEventDate.Inequality(FullEventDate, FullEventDate)
  fullName: TicketApi.Models.FullEventDate.Inequality(TicketApi.Models.FullEventDate, TicketApi.Models.FullEventDate)
  type: Operator
  source:
    remote:
      path: src/TicketApi/Models/FullEventDate.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: op_Inequality
    path: src/TicketApi/Models/FullEventDate.cs
    startLine: 249
  assemblies:
  - TicketApi
  namespace: TicketApi.Models
  syntax:
    content: public static bool operator !=(FullEventDate left, FullEventDate right)
    parameters:
    - id: left
      type: TicketApi.Models.FullEventDate
    - id: right
      type: TicketApi.Models.FullEventDate
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As FullEventDate, right As FullEventDate) As Boolean
  overload: TicketApi.Models.FullEventDate.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TicketApi.Models
  commentId: N:TicketApi.Models
  isExternal: false
  name: TicketApi.Models
  nameWithType: TicketApi.Models
  fullName: TicketApi.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{TicketApi.Models.FullEventDate}
  commentId: T:System.IEquatable{TicketApi.Models.FullEventDate}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<FullEventDate>
  nameWithType: IEquatable<FullEventDate>
  fullName: System.IEquatable<TicketApi.Models.FullEventDate>
  nameWithType.vb: IEquatable(Of FullEventDate)
  fullName.vb: System.IEquatable(Of TicketApi.Models.FullEventDate)
  name.vb: IEquatable(Of FullEventDate)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketApi.Models.FullEventDate
    name: FullEventDate
    nameWithType: FullEventDate
    fullName: TicketApi.Models.FullEventDate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketApi.Models.FullEventDate
    name: FullEventDate
    nameWithType: FullEventDate
    fullName: TicketApi.Models.FullEventDate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate.Id*
  commentId: Overload:TicketApi.Models.FullEventDate.Id
  isExternal: false
  name: Id
  nameWithType: FullEventDate.Id
  fullName: TicketApi.Models.FullEventDate.Id
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate.EventId*
  commentId: Overload:TicketApi.Models.FullEventDate.EventId
  isExternal: false
  name: EventId
  nameWithType: FullEventDate.EventId
  fullName: TicketApi.Models.FullEventDate.EventId
- uid: TicketApi.Models.FullEventDate.EventName*
  commentId: Overload:TicketApi.Models.FullEventDate.EventName
  isExternal: false
  name: EventName
  nameWithType: FullEventDate.EventName
  fullName: TicketApi.Models.FullEventDate.EventName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketApi.Models.FullEventDate.EventHtmlDescription*
  commentId: Overload:TicketApi.Models.FullEventDate.EventHtmlDescription
  isExternal: false
  name: EventHtmlDescription
  nameWithType: FullEventDate.EventHtmlDescription
  fullName: TicketApi.Models.FullEventDate.EventHtmlDescription
- uid: TicketApi.Models.FullEventDate.EventDate*
  commentId: Overload:TicketApi.Models.FullEventDate.EventDate
  isExternal: false
  name: EventDate
  nameWithType: FullEventDate.EventDate
  fullName: TicketApi.Models.FullEventDate.EventDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate.VenueId*
  commentId: Overload:TicketApi.Models.FullEventDate.VenueId
  isExternal: false
  name: VenueId
  nameWithType: FullEventDate.VenueId
  fullName: TicketApi.Models.FullEventDate.VenueId
- uid: TicketApi.Models.FullEventDate.VenueName*
  commentId: Overload:TicketApi.Models.FullEventDate.VenueName
  isExternal: false
  name: VenueName
  nameWithType: FullEventDate.VenueName
  fullName: TicketApi.Models.FullEventDate.VenueName
- uid: TicketApi.Models.FullEventDate.VenueCity*
  commentId: Overload:TicketApi.Models.FullEventDate.VenueCity
  isExternal: false
  name: VenueCity
  nameWithType: FullEventDate.VenueCity
  fullName: TicketApi.Models.FullEventDate.VenueCity
- uid: TicketApi.Models.FullEventDate.VenueCountry*
  commentId: Overload:TicketApi.Models.FullEventDate.VenueCountry
  isExternal: false
  name: VenueCountry
  nameWithType: FullEventDate.VenueCountry
  fullName: TicketApi.Models.FullEventDate.VenueCountry
- uid: TicketApi.Models.FullEventDate.NoAvailableSeats*
  commentId: Overload:TicketApi.Models.FullEventDate.NoAvailableSeats
  isExternal: false
  name: NoAvailableSeats
  nameWithType: FullEventDate.NoAvailableSeats
  fullName: TicketApi.Models.FullEventDate.NoAvailableSeats
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate.ToString*
  commentId: Overload:TicketApi.Models.FullEventDate.ToString
  isExternal: false
  name: ToString
  nameWithType: FullEventDate.ToString
  fullName: TicketApi.Models.FullEventDate.ToString
- uid: TicketApi.Models.FullEventDate.ToJson*
  commentId: Overload:TicketApi.Models.FullEventDate.ToJson
  isExternal: false
  name: ToJson
  nameWithType: FullEventDate.ToJson
  fullName: TicketApi.Models.FullEventDate.ToJson
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate.Equals*
  commentId: Overload:TicketApi.Models.FullEventDate.Equals
  isExternal: false
  name: Equals
  nameWithType: FullEventDate.Equals
  fullName: TicketApi.Models.FullEventDate.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{TicketApi.Models.FullEventDate}.Equals(TicketApi.Models.FullEventDate)
  commentId: M:System.IEquatable{TicketApi.Models.FullEventDate}.Equals(TicketApi.Models.FullEventDate)
  parent: System.IEquatable{TicketApi.Models.FullEventDate}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(FullEventDate)
  nameWithType: IEquatable<FullEventDate>.Equals(FullEventDate)
  fullName: System.IEquatable<TicketApi.Models.FullEventDate>.Equals(TicketApi.Models.FullEventDate)
  nameWithType.vb: IEquatable(Of FullEventDate).Equals(FullEventDate)
  fullName.vb: System.IEquatable(Of TicketApi.Models.FullEventDate).Equals(TicketApi.Models.FullEventDate)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<FullEventDate>.Equals
    fullName: System.IEquatable<TicketApi.Models.FullEventDate>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketApi.Models.FullEventDate
    name: FullEventDate
    nameWithType: FullEventDate
    fullName: TicketApi.Models.FullEventDate
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of FullEventDate).Equals
    fullName: System.IEquatable(Of TicketApi.Models.FullEventDate).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: TicketApi.Models.FullEventDate
    name: FullEventDate
    nameWithType: FullEventDate
    fullName: TicketApi.Models.FullEventDate
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate
  commentId: T:TicketApi.Models.FullEventDate
  parent: TicketApi.Models
  isExternal: false
  name: FullEventDate
  nameWithType: FullEventDate
  fullName: TicketApi.Models.FullEventDate
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TicketApi.Models.FullEventDate.GetHashCode*
  commentId: Overload:TicketApi.Models.FullEventDate.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: FullEventDate.GetHashCode
  fullName: TicketApi.Models.FullEventDate.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: TicketApi.Models.FullEventDate.op_Equality*
  commentId: Overload:TicketApi.Models.FullEventDate.op_Equality
  isExternal: false
  name: Equality
  nameWithType: FullEventDate.Equality
  fullName: TicketApi.Models.FullEventDate.Equality
- uid: TicketApi.Models.FullEventDate.op_Inequality*
  commentId: Overload:TicketApi.Models.FullEventDate.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: FullEventDate.Inequality
  fullName: TicketApi.Models.FullEventDate.Inequality

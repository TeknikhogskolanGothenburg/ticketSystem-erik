### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository
  commentId: T:TicketSystem.DatabaseRepository.Interface.ITicketRepository
  id: ITicketRepository
  parent: TicketSystem.DatabaseRepository.Interface
  children:
  - TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets(System.Int32,System.Int32)
  - TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  - TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: ITicketRepository
  nameWithType: ITicketRepository
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository
  type: Interface
  source:
    remote:
      path: src/DatabaseRepository/Interface/ITicketRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: ITicketRepository
    path: src/DatabaseRepository/Interface/ITicketRepository.cs
    startLine: 5
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  syntax:
    content: public interface ITicketRepository
    content.vb: Public Interface ITicketRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets(System.Int32,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets(System.Int32,System.Int32)
  id: GetTickets(System.Int32,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.ITicketRepository
  langs:
  - csharp
  - vb
  name: GetTickets(Int32, Int32)
  nameWithType: ITicketRepository.GetTickets(Int32, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/ITicketRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetTickets
    path: src/DatabaseRepository/Interface/ITicketRepository.cs
    startLine: 13
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet tickets\n"
  example: []
  syntax:
    content: List<Ticket> GetTickets(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
      description: Result set offset
    - id: maxLimit
      type: System.Int32
      description: Max number of result to fetch
    return:
      type: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.Ticket}
      description: A list of ticket object representations
    content.vb: Function GetTickets(offset As Integer = 0, maxLimit As Integer = 20) As List(Of Ticket)
  overload: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets*
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId(System.String,System.Int32,System.Int32)
  id: GetTicketsByUserId(System.String,System.Int32,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.ITicketRepository
  langs:
  - csharp
  - vb
  name: GetTicketsByUserId(String, Int32, Int32)
  nameWithType: ITicketRepository.GetTicketsByUserId(String, Int32, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId(System.String, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/ITicketRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetTicketsByUserId
    path: src/DatabaseRepository/Interface/ITicketRepository.cs
    startLine: 22
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet tickets from user\n"
  example: []
  syntax:
    content: List<Ticket> GetTicketsByUserId(string userId, int offset = 0, int maxLimit = 20)
    parameters:
    - id: userId
      type: System.String
      description: User Id
    - id: offset
      type: System.Int32
      description: Result set offset
    - id: maxLimit
      type: System.Int32
      description: Max number of result to fetch
    return:
      type: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.Ticket}
      description: A list of ticket object representations for user
    content.vb: Function GetTicketsByUserId(userId As String, offset As Integer = 0, maxLimit As Integer = 20) As List(Of Ticket)
  overload: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId*
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  id: GetTicketsByTransactionId(System.Int32,System.Int32,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.ITicketRepository
  langs:
  - csharp
  - vb
  name: GetTicketsByTransactionId(Int32, Int32, Int32)
  nameWithType: ITicketRepository.GetTicketsByTransactionId(Int32, Int32, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId(System.Int32, System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/ITicketRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetTicketsByTransactionId
    path: src/DatabaseRepository/Interface/ITicketRepository.cs
    startLine: 31
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet tickets by transactionID\n"
  example: []
  syntax:
    content: List<Ticket> GetTicketsByTransactionId(int transactionId, int offset = 0, int maxLimit = 20)
    parameters:
    - id: transactionId
      type: System.Int32
      description: Transaction ID to look for
    - id: offset
      type: System.Int32
      description: Result set offset
    - id: maxLimit
      type: System.Int32
      description: Max number of result to fetch
    return:
      type: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.Ticket}
      description: A list of ticket object representations for a Transaction
    content.vb: Function GetTicketsByTransactionId(transactionId As Integer, offset As Integer = 0, maxLimit As Integer = 20) As List(Of Ticket)
  overload: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId*
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById(System.Int32)
  id: GetTicketById(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.ITicketRepository
  langs:
  - csharp
  - vb
  name: GetTicketById(Int32)
  nameWithType: ITicketRepository.GetTicketById(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/ITicketRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetTicketById
    path: src/DatabaseRepository/Interface/ITicketRepository.cs
    startLine: 37
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet ticket by Id\n"
  example: []
  syntax:
    content: Ticket GetTicketById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: Id of the ticket
    return:
      type: TicketSystem.DatabaseRepository.Model.Ticket
      description: An object representation of the ticket
    content.vb: Function GetTicketById(id As Integer) As Ticket
  overload: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById*
references:
- uid: TicketSystem.DatabaseRepository.Interface
  commentId: N:TicketSystem.DatabaseRepository.Interface
  isExternal: false
  name: TicketSystem.DatabaseRepository.Interface
  nameWithType: TicketSystem.DatabaseRepository.Interface
  fullName: TicketSystem.DatabaseRepository.Interface
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets
  isExternal: false
  name: GetTickets
  nameWithType: ITicketRepository.GetTickets
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTickets
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.Ticket}
  commentId: T:System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.Ticket}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Ticket>
  nameWithType: List<Ticket>
  fullName: System.Collections.Generic.List<TicketSystem.DatabaseRepository.Model.Ticket>
  nameWithType.vb: List(Of Ticket)
  fullName.vb: System.Collections.Generic.List(Of TicketSystem.DatabaseRepository.Model.Ticket)
  name.vb: List(Of Ticket)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketSystem.DatabaseRepository.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketSystem.DatabaseRepository.Model.Ticket
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketSystem.DatabaseRepository.Model.Ticket
    name: Ticket
    nameWithType: Ticket
    fullName: TicketSystem.DatabaseRepository.Model.Ticket
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId
  isExternal: false
  name: GetTicketsByUserId
  nameWithType: ITicketRepository.GetTicketsByUserId
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByUserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId
  isExternal: false
  name: GetTicketsByTransactionId
  nameWithType: ITicketRepository.GetTicketsByTransactionId
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketsByTransactionId
- uid: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById
  isExternal: false
  name: GetTicketById
  nameWithType: ITicketRepository.GetTicketById
  fullName: TicketSystem.DatabaseRepository.Interface.ITicketRepository.GetTicketById
- uid: TicketSystem.DatabaseRepository.Model.Ticket
  commentId: T:TicketSystem.DatabaseRepository.Model.Ticket
  parent: TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: Ticket
  nameWithType: Ticket
  fullName: TicketSystem.DatabaseRepository.Model.Ticket
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model

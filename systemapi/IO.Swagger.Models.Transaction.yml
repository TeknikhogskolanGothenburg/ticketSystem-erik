### YamlMime:ManagedReference
items:
- uid: IO.Swagger.Models.Transaction
  commentId: T:IO.Swagger.Models.Transaction
  id: Transaction
  parent: IO.Swagger.Models
  children:
  - IO.Swagger.Models.Transaction.Customer
  - IO.Swagger.Models.Transaction.Equals(IO.Swagger.Models.Transaction)
  - IO.Swagger.Models.Transaction.Equals(System.Object)
  - IO.Swagger.Models.Transaction.GetHashCode
  - IO.Swagger.Models.Transaction.Id
  - IO.Swagger.Models.Transaction.op_Equality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  - IO.Swagger.Models.Transaction.op_Inequality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  - IO.Swagger.Models.Transaction.PaymentReferenceId
  - IO.Swagger.Models.Transaction.PaymentStatus
  - IO.Swagger.Models.Transaction.ToJson
  - IO.Swagger.Models.Transaction.ToString
  langs:
  - csharp
  - vb
  name: Transaction
  nameWithType: Transaction
  fullName: IO.Swagger.Models.Transaction
  type: Class
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Transaction
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 38
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\n\n"
  example: []
  syntax:
    content: >-
      [DataContract]

      public class Transaction : IEquatable<Transaction>
    content.vb: >-
      <DataContract>

      Public Class Transaction
          Implements IEquatable(Of Transaction)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{IO.Swagger.Models.Transaction}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Runtime.Serialization.DataContractAttribute
    ctor: System.Runtime.Serialization.DataContractAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: IO.Swagger.Models.Transaction.Id
  commentId: P:IO.Swagger.Models.Transaction.Id
  id: Id
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Transaction.Id
  fullName: IO.Swagger.Models.Transaction.Id
  type: Property
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Id
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 44
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nGets or Sets Id\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "id")]

      public int ? Id { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <DataMember(Name:="id")>

      Public Property Id As Integer?
  overload: IO.Swagger.Models.Transaction.Id*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IO.Swagger.Models.Transaction.Customer
  commentId: P:IO.Swagger.Models.Transaction.Customer
  id: Customer
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: Transaction.Customer
  fullName: IO.Swagger.Models.Transaction.Customer
  type: Property
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Customer
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 50
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nGets or Sets Customer\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "customer")]

      public Customer Customer { get; set; }
    parameters: []
    return:
      type: IO.Swagger.Models.Customer
    content.vb: >-
      <DataMember(Name:="customer")>

      Public Property Customer As Customer
  overload: IO.Swagger.Models.Transaction.Customer*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: customer
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IO.Swagger.Models.Transaction.PaymentStatus
  commentId: P:IO.Swagger.Models.Transaction.PaymentStatus
  id: PaymentStatus
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: PaymentStatus
  nameWithType: Transaction.PaymentStatus
  fullName: IO.Swagger.Models.Transaction.PaymentStatus
  type: Property
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: PaymentStatus
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 56
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nGets or Sets PaymentStatus\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "paymentStatus")]

      public string PaymentStatus { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="paymentStatus")>

      Public Property PaymentStatus As String
  overload: IO.Swagger.Models.Transaction.PaymentStatus*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: paymentStatus
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IO.Swagger.Models.Transaction.PaymentReferenceId
  commentId: P:IO.Swagger.Models.Transaction.PaymentReferenceId
  id: PaymentReferenceId
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: PaymentReferenceId
  nameWithType: Transaction.PaymentReferenceId
  fullName: IO.Swagger.Models.Transaction.PaymentReferenceId
  type: Property
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: PaymentReferenceId
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 62
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nGets or Sets PaymentReferenceId\n"
  example: []
  syntax:
    content: >-
      [DataMember(Name = "paymentReferenceId")]

      public string PaymentReferenceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataMember(Name:="paymentReferenceId")>

      Public Property PaymentReferenceId As String
  overload: IO.Swagger.Models.Transaction.PaymentReferenceId*
  attributes:
  - type: System.Runtime.Serialization.DataMemberAttribute
    ctor: System.Runtime.Serialization.DataMemberAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: paymentReferenceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: IO.Swagger.Models.Transaction.ToString
  commentId: M:IO.Swagger.Models.Transaction.ToString
  id: ToString
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Transaction.ToString()
  fullName: IO.Swagger.Models.Transaction.ToString()
  type: Method
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: ToString
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 69
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nReturns the string presentation of the object\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: String presentation of the object
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: IO.Swagger.Models.Transaction.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: IO.Swagger.Models.Transaction.ToJson
  commentId: M:IO.Swagger.Models.Transaction.ToJson
  id: ToJson
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: ToJson()
  nameWithType: Transaction.ToJson()
  fullName: IO.Swagger.Models.Transaction.ToJson()
  type: Method
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: ToJson
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 85
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nReturns the JSON string presentation of the object\n"
  example: []
  syntax:
    content: public string ToJson()
    return:
      type: System.String
      description: JSON string presentation of the object
    content.vb: Public Function ToJson As String
  overload: IO.Swagger.Models.Transaction.ToJson*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: IO.Swagger.Models.Transaction.Equals(System.Object)
  commentId: M:IO.Swagger.Models.Transaction.Equals(System.Object)
  id: Equals(System.Object)
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Transaction.Equals(Object)
  fullName: IO.Swagger.Models.Transaction.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Equals
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 95
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nReturns true if objects are equal\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: Object to be compared
    return:
      type: System.Boolean
      description: Boolean
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: IO.Swagger.Models.Transaction.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: IO.Swagger.Models.Transaction.Equals(IO.Swagger.Models.Transaction)
  commentId: M:IO.Swagger.Models.Transaction.Equals(IO.Swagger.Models.Transaction)
  id: Equals(IO.Swagger.Models.Transaction)
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: Equals(Transaction)
  nameWithType: Transaction.Equals(Transaction)
  fullName: IO.Swagger.Models.Transaction.Equals(IO.Swagger.Models.Transaction)
  type: Method
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: Equals
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 107
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nReturns true if Transaction instances are equal\n"
  example: []
  syntax:
    content: public bool Equals(Transaction other)
    parameters:
    - id: other
      type: IO.Swagger.Models.Transaction
      description: Instance of Transaction to be compared
    return:
      type: System.Boolean
      description: Boolean
    content.vb: Public Function Equals(other As Transaction) As Boolean
  overload: IO.Swagger.Models.Transaction.Equals*
  implements:
  - System.IEquatable{IO.Swagger.Models.Transaction}.Equals(IO.Swagger.Models.Transaction)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: IO.Swagger.Models.Transaction.GetHashCode
  commentId: M:IO.Swagger.Models.Transaction.GetHashCode
  id: GetHashCode
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Transaction.GetHashCode()
  fullName: IO.Swagger.Models.Transaction.GetHashCode()
  type: Method
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetHashCode
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 139
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  summary: "\nGets the hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: Hash code
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: IO.Swagger.Models.Transaction.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: IO.Swagger.Models.Transaction.op_Equality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  commentId: M:IO.Swagger.Models.Transaction.op_Equality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  id: op_Equality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: Equality(Transaction, Transaction)
  nameWithType: Transaction.Equality(Transaction, Transaction)
  fullName: IO.Swagger.Models.Transaction.Equality(IO.Swagger.Models.Transaction, IO.Swagger.Models.Transaction)
  type: Operator
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: op_Equality
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 160
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  syntax:
    content: public static bool operator ==(Transaction left, Transaction right)
    parameters:
    - id: left
      type: IO.Swagger.Models.Transaction
    - id: right
      type: IO.Swagger.Models.Transaction
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As Transaction, right As Transaction) As Boolean
  overload: IO.Swagger.Models.Transaction.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: IO.Swagger.Models.Transaction.op_Inequality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  commentId: M:IO.Swagger.Models.Transaction.op_Inequality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  id: op_Inequality(IO.Swagger.Models.Transaction,IO.Swagger.Models.Transaction)
  parent: IO.Swagger.Models.Transaction
  langs:
  - csharp
  - vb
  name: Inequality(Transaction, Transaction)
  nameWithType: Transaction.Inequality(Transaction, Transaction)
  fullName: IO.Swagger.Models.Transaction.Inequality(IO.Swagger.Models.Transaction, IO.Swagger.Models.Transaction)
  type: Operator
  source:
    remote:
      path: src/IO.Swagger/Models/Transaction.cs
      branch: RESTapi_Swagger
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: op_Inequality
    path: src/IO.Swagger/Models/Transaction.cs
    startLine: 165
  assemblies:
  - IO.Swagger
  namespace: IO.Swagger.Models
  syntax:
    content: public static bool operator !=(Transaction left, Transaction right)
    parameters:
    - id: left
      type: IO.Swagger.Models.Transaction
    - id: right
      type: IO.Swagger.Models.Transaction
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As Transaction, right As Transaction) As Boolean
  overload: IO.Swagger.Models.Transaction.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: IO.Swagger.Models
  commentId: N:IO.Swagger.Models
  isExternal: false
  name: IO.Swagger.Models
  nameWithType: IO.Swagger.Models
  fullName: IO.Swagger.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IEquatable{IO.Swagger.Models.Transaction}
  commentId: T:System.IEquatable{IO.Swagger.Models.Transaction}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Transaction>
  nameWithType: IEquatable<Transaction>
  fullName: System.IEquatable<IO.Swagger.Models.Transaction>
  nameWithType.vb: IEquatable(Of Transaction)
  fullName.vb: System.IEquatable(Of IO.Swagger.Models.Transaction)
  name.vb: IEquatable(Of Transaction)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IO.Swagger.Models.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: IO.Swagger.Models.Transaction
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IO.Swagger.Models.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: IO.Swagger.Models.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IO.Swagger.Models.Transaction.Id*
  commentId: Overload:IO.Swagger.Models.Transaction.Id
  isExternal: false
  name: Id
  nameWithType: Transaction.Id
  fullName: IO.Swagger.Models.Transaction.Id
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: IO.Swagger.Models.Transaction.Customer*
  commentId: Overload:IO.Swagger.Models.Transaction.Customer
  isExternal: false
  name: Customer
  nameWithType: Transaction.Customer
  fullName: IO.Swagger.Models.Transaction.Customer
- uid: IO.Swagger.Models.Customer
  commentId: T:IO.Swagger.Models.Customer
  parent: IO.Swagger.Models
  isExternal: false
  name: Customer
  nameWithType: Customer
  fullName: IO.Swagger.Models.Customer
- uid: IO.Swagger.Models.Transaction.PaymentStatus*
  commentId: Overload:IO.Swagger.Models.Transaction.PaymentStatus
  isExternal: false
  name: PaymentStatus
  nameWithType: Transaction.PaymentStatus
  fullName: IO.Swagger.Models.Transaction.PaymentStatus
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: IO.Swagger.Models.Transaction.PaymentReferenceId*
  commentId: Overload:IO.Swagger.Models.Transaction.PaymentReferenceId
  isExternal: false
  name: PaymentReferenceId
  nameWithType: Transaction.PaymentReferenceId
  fullName: IO.Swagger.Models.Transaction.PaymentReferenceId
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: IO.Swagger.Models.Transaction.ToString*
  commentId: Overload:IO.Swagger.Models.Transaction.ToString
  isExternal: false
  name: ToString
  nameWithType: Transaction.ToString
  fullName: IO.Swagger.Models.Transaction.ToString
- uid: IO.Swagger.Models.Transaction.ToJson*
  commentId: Overload:IO.Swagger.Models.Transaction.ToJson
  isExternal: false
  name: ToJson
  nameWithType: Transaction.ToJson
  fullName: IO.Swagger.Models.Transaction.ToJson
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IO.Swagger.Models.Transaction.Equals*
  commentId: Overload:IO.Swagger.Models.Transaction.Equals
  isExternal: false
  name: Equals
  nameWithType: Transaction.Equals
  fullName: IO.Swagger.Models.Transaction.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{IO.Swagger.Models.Transaction}.Equals(IO.Swagger.Models.Transaction)
  commentId: M:System.IEquatable{IO.Swagger.Models.Transaction}.Equals(IO.Swagger.Models.Transaction)
  parent: System.IEquatable{IO.Swagger.Models.Transaction}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Transaction)
  nameWithType: IEquatable<Transaction>.Equals(Transaction)
  fullName: System.IEquatable<IO.Swagger.Models.Transaction>.Equals(IO.Swagger.Models.Transaction)
  nameWithType.vb: IEquatable(Of Transaction).Equals(Transaction)
  fullName.vb: System.IEquatable(Of IO.Swagger.Models.Transaction).Equals(IO.Swagger.Models.Transaction)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Transaction>.Equals
    fullName: System.IEquatable<IO.Swagger.Models.Transaction>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: IO.Swagger.Models.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: IO.Swagger.Models.Transaction
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Transaction).Equals
    fullName: System.IEquatable(Of IO.Swagger.Models.Transaction).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: IO.Swagger.Models.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: IO.Swagger.Models.Transaction
  - name: )
    nameWithType: )
    fullName: )
- uid: IO.Swagger.Models.Transaction
  commentId: T:IO.Swagger.Models.Transaction
  parent: IO.Swagger.Models
  isExternal: false
  name: Transaction
  nameWithType: Transaction
  fullName: IO.Swagger.Models.Transaction
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: IO.Swagger.Models.Transaction.GetHashCode*
  commentId: Overload:IO.Swagger.Models.Transaction.GetHashCode
  isExternal: false
  name: GetHashCode
  nameWithType: Transaction.GetHashCode
  fullName: IO.Swagger.Models.Transaction.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: IO.Swagger.Models.Transaction.op_Equality*
  commentId: Overload:IO.Swagger.Models.Transaction.op_Equality
  isExternal: false
  name: Equality
  nameWithType: Transaction.Equality
  fullName: IO.Swagger.Models.Transaction.Equality
- uid: IO.Swagger.Models.Transaction.op_Inequality*
  commentId: Overload:IO.Swagger.Models.Transaction.op_Inequality
  isExternal: false
  name: Inequality
  nameWithType: Transaction.Inequality
  fullName: IO.Swagger.Models.Transaction.Inequality

### YamlMime:ManagedReference
items:
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  commentId: T:TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  id: IEventDateRepository
  parent: TicketSystem.DatabaseRepository.Interface
  children:
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate(System.Int32,System.Int32,System.DateTime,System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats(System.Int32,System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates(System.String)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates(System.Int32,System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats(System.Int32)
  - TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate(System.Int32,System.Int32,System.Int32,System.DateTime,System.Int32)
  langs:
  - csharp
  - vb
  name: IEventDateRepository
  nameWithType: IEventDateRepository
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  type: Interface
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: IEventDateRepository
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 6
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  syntax:
    content: public interface IEventDateRepository
    content.vb: Public Interface IEventDateRepository
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate(System.Int32,System.Int32,System.DateTime,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate(System.Int32,System.Int32,System.DateTime,System.Int32)
  id: AddEventDate(System.Int32,System.Int32,System.DateTime,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: AddEventDate(Int32, Int32, DateTime, Int32)
  nameWithType: IEventDateRepository.AddEventDate(Int32, Int32, DateTime, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate(System.Int32, System.Int32, System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: AddEventDate
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 16
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nAdd event date to database\n"
  example: []
  syntax:
    content: EventDate AddEventDate(int eventId, int venueId, DateTime eventDate, int seats)
    parameters:
    - id: eventId
      type: System.Int32
      description: ID of Event
    - id: venueId
      type: System.Int32
      description: ID of Venue where event date will take place
    - id: eventDate
      type: System.DateTime
      description: Datetime of the event date
    - id: seats
      type: System.Int32
      description: Number of seats at the event date
    return:
      type: TicketSystem.DatabaseRepository.Model.EventDate
      description: An object representation of the created EventDate
    content.vb: Function AddEventDate(eventId As Integer, venueId As Integer, eventDate As Date, seats As Integer) As EventDate
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates(System.Int32,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates(System.Int32,System.Int32)
  id: GetEventDates(System.Int32,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: GetEventDates(Int32, Int32)
  nameWithType: IEventDateRepository.GetEventDates(Int32, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetEventDates
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 24
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet Event Dates\n"
  example: []
  syntax:
    content: List<EventDate> GetEventDates(int offset = 0, int maxLimit = 20)
    parameters:
    - id: offset
      type: System.Int32
      description: Result set offset
    - id: maxLimit
      type: System.Int32
      description: Max result rows to fetch
    return:
      type: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.EventDate}
      description: A list of object representations of EventDates
    content.vb: Function GetEventDates(offset As Integer = 0, maxLimit As Integer = 20) As List(Of EventDate)
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById(System.Int32)
  id: GetEventDateById(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: GetEventDateById(Int32)
  nameWithType: IEventDateRepository.GetEventDateById(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetEventDateById
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 31
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet EventDate by ID\n"
  example: []
  syntax:
    content: EventDate GetEventDateById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of EventDate
    return:
      type: TicketSystem.DatabaseRepository.Model.EventDate
      description: An object representation of the EventDate
    content.vb: Function GetEventDateById(id As Integer) As EventDate
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId(System.Int32)
  id: GetEventDateByEventId(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: GetEventDateByEventId(Int32)
  nameWithType: IEventDateRepository.GetEventDateByEventId(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetEventDateByEventId
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 38
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet EventDate by parent Event ID\n"
  example: []
  syntax:
    content: EventDate GetEventDateByEventId(int eventId)
    parameters:
    - id: eventId
      type: System.Int32
      description: ID of Parent Event
    return:
      type: TicketSystem.DatabaseRepository.Model.EventDate
      description: An object representation of the EventDate
    content.vb: Function GetEventDateByEventId(eventId As Integer) As EventDate
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById(System.Int32)
  id: GetFullEventDateById(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: GetFullEventDateById(Int32)
  nameWithType: IEventDateRepository.GetFullEventDateById(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetFullEventDateById
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 45
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet the full EventDate w/ all data of venue, event\n"
  example: []
  syntax:
    content: FullEventDate GetFullEventDateById(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of the EventDate
    return:
      type: TicketSystem.DatabaseRepository.Model.FullEventDate
      description: An object representation of the EventDate
    content.vb: Function GetFullEventDateById(id As Integer) As FullEventDate
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate(System.Int32,System.Int32,System.Int32,System.DateTime,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate(System.Int32,System.Int32,System.Int32,System.DateTime,System.Int32)
  id: UpdateEventDate(System.Int32,System.Int32,System.Int32,System.DateTime,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: UpdateEventDate(Int32, Int32, Int32, DateTime, Int32)
  nameWithType: IEventDateRepository.UpdateEventDate(Int32, Int32, Int32, DateTime, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate(System.Int32, System.Int32, System.Int32, System.DateTime, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: UpdateEventDate
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 56
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nUpdate the EventDate\n"
  example: []
  syntax:
    content: EventDate UpdateEventDate(int id, int eventId, int venueId, DateTime dateTime, int seats)
    parameters:
    - id: id
      type: System.Int32
      description: ID of the EventDate
    - id: eventId
      type: System.Int32
      description: ID of parent Event
    - id: venueId
      type: System.Int32
      description: ID of venue
    - id: dateTime
      type: System.DateTime
    - id: seats
      type: System.Int32
      description: Number of seats at EventDate
    return:
      type: TicketSystem.DatabaseRepository.Model.EventDate
      description: An object representation of the updated EventDate
    content.vb: Function UpdateEventDate(id As Integer, eventId As Integer, venueId As Integer, dateTime As Date, seats As Integer) As EventDate
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate(System.Int32)
  id: DeleteEventDate(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: DeleteEventDate(Int32)
  nameWithType: IEventDateRepository.DeleteEventDate(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: DeleteEventDate
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 62
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nDelete EventDate by ID\n"
  example: []
  syntax:
    content: void DeleteEventDate(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of the EventDate
    content.vb: Sub DeleteEventDate(id As Integer)
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates(System.String)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates(System.String)
  id: FindEventDates(System.String)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: FindEventDates(String)
  nameWithType: IEventDateRepository.FindEventDates(String)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates(System.String)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: FindEventDates
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 69
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nFind EventDates matching the search query\n"
  example: []
  syntax:
    content: List<EventDate> FindEventDates(string searchStr)
    parameters:
    - id: searchStr
      type: System.String
      description: Search query
    return:
      type: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.EventDate}
      description: A list of object representations of EventDates matching the query
    content.vb: Function FindEventDates(searchStr As String) As List(Of EventDate)
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats(System.Int32)
  id: GetSeats(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: GetSeats(Int32)
  nameWithType: IEventDateRepository.GetSeats(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetSeats
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 76
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet number of seats at EventDate\n"
  example: []
  syntax:
    content: int GetSeats(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of EventDate
    return:
      type: System.Int32
      description: The number of seats at the EventDate
    content.vb: Function GetSeats(id As Integer) As Integer
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats(System.Int32,System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats(System.Int32,System.Int32)
  id: AddSeats(System.Int32,System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: AddSeats(Int32, Int32)
  nameWithType: IEventDateRepository.AddSeats(Int32, Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats(System.Int32, System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: AddSeats
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 84
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nAdd number of seats at EventDate\n"
  example: []
  syntax:
    content: void AddSeats(int id, int numberSeats)
    parameters:
    - id: id
      type: System.Int32
      description: ID of EventDate
    - id: numberSeats
      type: System.Int32
      description: Number of seats to add
    content.vb: Sub AddSeats(id As Integer, numberSeats As Integer)
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats*
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats(System.Int32)
  commentId: M:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats(System.Int32)
  id: GetAvailableSeats(System.Int32)
  parent: TicketSystem.DatabaseRepository.Interface.IEventDateRepository
  langs:
  - csharp
  - vb
  name: GetAvailableSeats(Int32)
  nameWithType: IEventDateRepository.GetAvailableSeats(Int32)
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats(System.Int32)
  type: Method
  source:
    remote:
      path: src/DatabaseRepository/Interface/IEventDateRepository.cs
      branch: features/db
      repo: https://github.com/TeknikhogskolanGothenburg/ticketSystem-erik.git
    id: GetAvailableSeats
    path: src/DatabaseRepository/Interface/IEventDateRepository.cs
    startLine: 91
  assemblies:
  - DatabaseRepository
  namespace: TicketSystem.DatabaseRepository.Interface
  summary: "\nGet number of available seats at EventDate\n"
  example: []
  syntax:
    content: int GetAvailableSeats(int id)
    parameters:
    - id: id
      type: System.Int32
      description: ID of EventDate
    return:
      type: System.Int32
      description: Number of available seats at EventDate
    content.vb: Function GetAvailableSeats(id As Integer) As Integer
  overload: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats*
references:
- uid: TicketSystem.DatabaseRepository.Interface
  commentId: N:TicketSystem.DatabaseRepository.Interface
  isExternal: false
  name: TicketSystem.DatabaseRepository.Interface
  nameWithType: TicketSystem.DatabaseRepository.Interface
  fullName: TicketSystem.DatabaseRepository.Interface
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate
  isExternal: false
  name: AddEventDate
  nameWithType: IEventDateRepository.AddEventDate
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddEventDate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: TicketSystem.DatabaseRepository.Model.EventDate
  commentId: T:TicketSystem.DatabaseRepository.Model.EventDate
  parent: TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: EventDate
  nameWithType: EventDate
  fullName: TicketSystem.DatabaseRepository.Model.EventDate
- uid: System
  commentId: N:System
  isExternal: false
  name: System
  nameWithType: System
  fullName: System
- uid: TicketSystem.DatabaseRepository.Model
  commentId: N:TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: TicketSystem.DatabaseRepository.Model
  nameWithType: TicketSystem.DatabaseRepository.Model
  fullName: TicketSystem.DatabaseRepository.Model
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates
  isExternal: false
  name: GetEventDates
  nameWithType: IEventDateRepository.GetEventDates
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDates
- uid: System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.EventDate}
  commentId: T:System.Collections.Generic.List{TicketSystem.DatabaseRepository.Model.EventDate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<EventDate>
  nameWithType: List<EventDate>
  fullName: System.Collections.Generic.List<TicketSystem.DatabaseRepository.Model.EventDate>
  nameWithType.vb: List(Of EventDate)
  fullName.vb: System.Collections.Generic.List(Of TicketSystem.DatabaseRepository.Model.EventDate)
  name.vb: List(Of EventDate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TicketSystem.DatabaseRepository.Model.EventDate
    name: EventDate
    nameWithType: EventDate
    fullName: TicketSystem.DatabaseRepository.Model.EventDate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TicketSystem.DatabaseRepository.Model.EventDate
    name: EventDate
    nameWithType: EventDate
    fullName: TicketSystem.DatabaseRepository.Model.EventDate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById
  isExternal: false
  name: GetEventDateById
  nameWithType: IEventDateRepository.GetEventDateById
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateById
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId
  isExternal: false
  name: GetEventDateByEventId
  nameWithType: IEventDateRepository.GetEventDateByEventId
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetEventDateByEventId
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById
  isExternal: false
  name: GetFullEventDateById
  nameWithType: IEventDateRepository.GetFullEventDateById
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetFullEventDateById
- uid: TicketSystem.DatabaseRepository.Model.FullEventDate
  commentId: T:TicketSystem.DatabaseRepository.Model.FullEventDate
  parent: TicketSystem.DatabaseRepository.Model
  isExternal: false
  name: FullEventDate
  nameWithType: FullEventDate
  fullName: TicketSystem.DatabaseRepository.Model.FullEventDate
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate
  isExternal: false
  name: UpdateEventDate
  nameWithType: IEventDateRepository.UpdateEventDate
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.UpdateEventDate
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate
  isExternal: false
  name: DeleteEventDate
  nameWithType: IEventDateRepository.DeleteEventDate
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.DeleteEventDate
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates
  isExternal: false
  name: FindEventDates
  nameWithType: IEventDateRepository.FindEventDates
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.FindEventDates
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats
  isExternal: false
  name: GetSeats
  nameWithType: IEventDateRepository.GetSeats
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetSeats
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats
  isExternal: false
  name: AddSeats
  nameWithType: IEventDateRepository.AddSeats
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.AddSeats
- uid: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats*
  commentId: Overload:TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats
  isExternal: false
  name: GetAvailableSeats
  nameWithType: IEventDateRepository.GetAvailableSeats
  fullName: TicketSystem.DatabaseRepository.Interface.IEventDateRepository.GetAvailableSeats
